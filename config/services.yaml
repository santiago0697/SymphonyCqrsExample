# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: false      # Automatically injects dependencies in your services.
        autoconfigure: false # Automatically registers your services as commands, event subscribers, etc.

    controller.get_user:
        class: App\Controller\GetUserController
        arguments:
            - "@tactician.commandbus.read"
        tags: 
            - {"name": "controller.service_arguments"}

    controller.put_user:
        class: App\Controller\PutUserController
        arguments:
            - "@tactician.commandbus.async_write"
        tags:
            - {"name": "controller.service_arguments"}

    handler.get_user:
        class: App\Domain\QueryHandler\GetUserHandler
        arguments:
            - "@repository.users"
        tags:
            - {"name": "tactician.handler", "command": App\Domain\Query\GetUser}

    handler.put_user:
        class: App\Domain\CommandHandler\PutUserHandler
        arguments:
            - "@repository.users"
        tags:
            - {"name": "tactician.handler", "command": App\Domain\Command\PutUser}

    middleware.example_attributes:
        class: App\Domain\Middleware\ExampleAttributesMiddleware

    middleware.amqp:
        class: App\Amqp\Middleware\AmqpMiddleware
        arguments: ["@connection.amqp"]

    repository.user.in_memory:
        class: App\Domain\Repository\InMemoryUserRepository

    repository.dbal.users:
        class: App\Dbal\DbalUserRepository
        arguments: ['@doctrine.dbal.curso_connection']

    repository.users:
        alias: repository.dbal.users

    connection.amqp:
        class: App\Amqp\Connection
    
    console.command_consumer:
        class: App\Amqp\Console\CommandConsumer
        arguments: ["@connection.amqp", "@tactician.commandbus.write"]
        tags:
            - {"name": "console.command", "command": "amqp:consume"}